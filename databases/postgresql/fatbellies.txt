-- Database: fatbellies

-- DROP DATABASE fatbellies;

CREATE DATABASE fatbellies
    WITH 
    OWNER = postgres
    ENCODING = 'UTF8'
    LC_COLLATE = 'English_Malaysia.1252'
    LC_CTYPE = 'English_Malaysia.1252'
    TABLESPACE = pg_default
    CONNECTION LIMIT = 60;

COMMENT ON DATABASE fatbellies
    IS 'Xcidic Assessments';

/*DROP TABLE IF EXISTS demo;*/
DROP TABLE IF EXISTS branch_properties;
DROP TABLE IF EXISTS demand;
DROP TABLE IF EXISTS branch;

/*
CREATE TABLE demo(
	id int GENERATED ALWAYS AS IDENTITY,
	name varchar(100),
	PRIMARY KEY(id)
);
*/

CREATE TABLE branch(
	id int GENERATED ALWAYS AS IDENTITY,
	name varchar(100) not null,
	lat decimal(15,10) not null,
	log decimal(15,10) not null,
	open int not null,
	close int not null,
	status int not null default 1,
	created timestamptz not null default now(),
	updated timestamptz not null default now(),
	PRIMARY KEY(id)
);
INSERT INTO branch (name, lat, log, open, close) VALUES 
('Branch A', '-6.2', '106.816666', 10, 21),
('Branch B', '-7.161367', '113.482498', 11, 22),
('Branch C', '-6.966667', '110.416664', 09, 20);

CREATE TABLE branch_properties(
	id int GENERATED ALWAYS AS IDENTITY,
	bid int not null,
	meal_name text not null,
	capacity int not null,
	price decimal(10,2) not null,
	day int not null,
	start_time int not null,
	end_time int not null,
	status int not null default 1,
	created timestamptz not null default now(),
	updated timestamptz not null default now(),
	PRIMARY KEY(id),
	CONSTRAINT fk_branch
		FOREIGN KEY (bid)
		REFERENCES branch(id)
);
INSERT INTO branch_properties (bid, meal_name, capacity, price, day, start_time, end_time) VALUES 
(1, 'Buffet A', 10, 5, 1, 9, 12),
(1, 'Buffet B', 10, 5, 1, 12, 18),
(1, 'Buffet C', 10, 5, 1, 18, 21),
(1, 'Buffet C', 15, 5, 2, 9, 11),
(1, 'Buffet A', 15, 5, 2, 11, 15),
(1, 'Buffet B', 15, 5, 2, 15, 20),
(1, 'Buffet A', 10, 5, 3, 9, 12),
(1, 'Buffet B', 10, 5, 3, 12, 18),
(1, 'Buffet C', 10, 5, 3, 18, 21);

CREATE TABLE demand(
	id int GENERATED ALWAYS AS IDENTITY,
	bid int not null,
	capacity int not null,
	price decimal(10,2) not null,
	day int not null,
	start_time int not null,
	end_time int not null,
	status int not null default 1,
	created timestamptz not null default now(),
	updated timestamptz not null default now(),
	PRIMARY KEY(id),
	CONSTRAINT fk_branch
		FOREIGN KEY (bid)
		REFERENCES branch(id)
);